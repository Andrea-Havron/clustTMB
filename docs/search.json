[{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to clustTMB","title":"Contributing to clustTMB","text":"First , thanks considering contributing clustTMB! üëç ‚Äôs people like make rewarding us - project maintainers - work clustTMB. üòä clustTMB open source project, maintained people care. directly funded .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to clustTMB","text":"Please note project released Contributor Code Conduct. . participating project agree abide terms.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to clustTMB","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to clustTMB","text":"Think clustTMB useful? Let others discover , telling person, via Twitter blog post. Using clustTMB paper writing? Consider citing .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to clustTMB","text":"Using clustTMB got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer email.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to clustTMB","text":"idea new clustTMB feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to clustTMB","text":"Using clustTMB discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to clustTMB","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome! #### website website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to clustTMB","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to clustTMB","text":"Care fix bugs implement new functionality clustTMB? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to clustTMB","text":"try follow GitHub flow development. new features must unit tested documented pull request accepted. Unit tests developed using testthat testthat directory, see guide developing tests. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main. Create local branch make changes, never work directly main, see guide Open RStudio project file (.Rproj). Make changes: Write code. Test code Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes github account. Submit pull request.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://andrea-havron.github.io/clustTMB/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2021 NULL  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. clustTMB Copyright (C) 2021 NULL This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://andrea-havron.github.io/clustTMB/articles/CovarianceStructure.html","id":"spatial-gmrf","dir":"Articles","previous_headings":"Random Effect Covariace Matrices","what":"Spatial GMRF","title":"Covariance Structure","text":"clustTMB fits spatial random effects using Gaussian Markov Random Field (GMRF). precision matrix, \\(Q\\), GMRF inverse Mat'{e}rn covariance function takes two parameters: 1) \\(\\kappa\\), spatial decay parameter scaled function spatial range, \\(\\phi = \\sqrt{8}/\\kappa\\), distance two locations considered independent; 2) \\(\\tau\\), function \\(\\kappa\\) marginal spatial variance \\(\\sigma^{2}\\): \\[\\tau = \\frac{1}{2\\sqrt{\\pi}\\kappa\\sigma}.\\] precision matrix approximated following SPDE-FEM approach , constrained Delaunay triangulation network used discretize spatial extent order determine GMRF set irregularly spaced locations, $. \\[\\omega_{} \\sim GMRF(Q[\\kappa, \\tau])\\]","code":""},{"path":"https://andrea-havron.github.io/clustTMB/articles/CovarianceStructure.html","id":"spatial-example","dir":"Articles","previous_headings":"Random Effect Covariace Matrices > Spatial GMRF","what":"Spatial Example","title":"Covariance Structure","text":"Prior fitting spatial cluster model clustTMB, users need set constrained Delaunay Triangulation network using INLA. guidance setting appropriate mesh, see Triangulation details examples Tools mesh assessment example, following mesh specifications used:  Coordinates converted spatial point dataframe read clustTMB model, along mesh, using spatial.list argument. gating formula specified using gmrf() command: Models optimized nlminb(), model results can viewed nlminb commands:","code":"library(clustTMB) library(sp) library(INLA) data(\"meuse\") meshbuilder() # launches INLA mesh shiny app Loc <- meuse[, 1:2] Bnd <- INLA::inla.nonconvex.hull(as.matrix(Loc), convex = 200) meuse.mesh <- INLA::inla.mesh.2d(as.matrix(Loc),   max.edge = c(300, 1000),   boundary = Bnd ) ## Loading required package: fmesher sp::coordinates(Loc) <- ~ x * y mod <- clustTMB(   response = meuse[, 3:6],   family = lognormal(link = \"identity\"),   gatingformula = ~ gmrf(0 + 1 | loc),   G = 4, covariance.structure = \"VVV\",   spatial.list = list(loc = Loc, mesh = meuse.mesh) ) ## Warning in clustTMB(response = meuse[, 3:6], family = lognormal(link = \"identity\"), : intercept removed from gatingformula ##             when random effects specified ## Warning in setup.spatialDat(n.i, spatial.list, projection.dat): spatial ## projection is turned off. Need to provide locations in projection.list$grid.df ## for spatial predictions ## 'as(<matrix>, \"dgTMatrix\")' is deprecated. ## Use 'as(as(as(., \"dMatrix\"), \"generalMatrix\"), \"TsparseMatrix\")' instead. ## See help(\"Deprecated\") and help(\"Matrix-deprecated\"). # Estimated fixed parameters mod$opt$par ##      betag      betag      betag      betad      betad      betad      betad  ##  0.1652527  0.5709665  0.1645404  2.0157771  4.3160878  5.4259831  6.7095837  ##      betad      betad      betad      betad      betad      betad      betad  ##  1.0064934  3.6030495  5.2113140  6.2155358  0.1259804  3.1475092  4.2016946  ##      betad      betad      betad      betad      betad      theta      theta  ##  5.2523442 -1.4361513  3.1132978  4.2118629  5.1996610 -1.2100848 -2.9055431  ##      theta      theta      theta      theta      theta      theta      theta  ## -1.2794754 -1.2502177 -2.5623947 -3.1154964 -2.2459434 -2.3607754 -1.8075127  ##      theta      theta      theta      theta      theta      theta      theta  ## -4.0486834 -2.6845135 -3.0661853 -2.4648434 -3.3381111 -2.7804379 -2.6686122  ##  ln_kappag  ## -5.9089492 # Minimum negative log likelihood mod$opt$objective ## [1] 2318.798"},{"path":"https://andrea-havron.github.io/clustTMB/articles/CovarianceStructure.html","id":"gating-network-examples","dir":"Articles","previous_headings":"","what":"Gating Network Examples","title":"Covariance Structure","text":"random effects, \\(\\mathbb{u}\\), specified gating network, probability cluster membership \\(\\pi_{,g}\\) observation \\(\\) fit using multinomial regression: \\[ \\begin{align} \\mathbb{\\eta}_{,g} &= X\\mathbb{\\beta}_{,g} + \\mathbb{u}_{,g} \\\\ \\mathbb{\\pi}_{,g} &= \\frac{ exp(\\mathbb{\\eta}_{,g})}{\\sum^{G}_{g=1}exp(\\mathbb{\\eta}_{,g})} \\end{align} \\]","code":""},{"path":[]},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"data-overview","dir":"Articles","previous_headings":"Fitting clustTMB models","what":"Data Overview","title":"Meuse Data Example","text":"meuse data set sp library (Pebesma Bivand, 2005) consists 155 observations, 4 response variables, location data, 8 covariates. response involves four heavy metals measured monitor pollution levels top soil Meuse river floodplain, Netherlands (Fig. @ref(fig:sample), Rikken van Rijn, 1993). heavy metal data exhibit lognormality (Fig. @ref(fig:pairs-expl)), allowing comparison Gaussian lognormal distributions addition FMM without spatial structure influencing cluster probability. Sample locations heavy metal concentration levels (ppm) four metals topsoil Meuse river floodplain, Netherlands. Pairs plots concentration levels (ppm) four heavy metals measured topsoil Meuse river floodplain, Netherlands.","code":"# load data library(sp) data(\"meuse\") data(\"meuse.riv\") data(\"meuse.grid\") ## Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0. ## ‚Ñπ Please use the `linewidth` argument instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated."},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"simple-fmm","dir":"Articles","previous_headings":"Fitting clustTMB models","what":"Simple FMM","title":"Meuse Data Example","text":"simple Gaussian FMM can fit using following code: Specifying lognormal distribution implemented using family link specification:","code":"library(clustTMB) mod.gauss <- clustTMB(response = meuse[, 3:6], G = 3, covariance.structure = \"VVV\") ## 'as(<matrix>, \"dgTMatrix\")' is deprecated. ## Use 'as(as(as(., \"dMatrix\"), \"generalMatrix\"), \"TsparseMatrix\")' instead. ## See help(\"Deprecated\") and help(\"Matrix-deprecated\"). mod.ln <- clustTMB(   response = meuse[, 3:6],   family = lognormal(link = \"identity\"),   G = 3, covariance.structure = \"VVV\" )"},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"spatial-fmm","dir":"Articles","previous_headings":"Fitting clustTMB models","what":"Spatial FMM","title":"Meuse Data Example","text":"inclusion spatial random effects expectation cluster probability clustTMB depends SPDE-FEM approximation spatial Gaussian Markov Random Field (GMRF) introduced package, R-INLA. See Spatial GMRF Gating Network details clustTMB formulations.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"setting-up-the-spatial-mesh","dir":"Articles","previous_headings":"Fitting clustTMB models > Spatial FMM","what":"Setting up the spatial mesh","title":"Meuse Data Example","text":"spatial model clustTMB first requires definition spatial mesh using INLA. mesh defines discretization continuous space using constrained Delaunay triangulation. details building spatial mesh, see Krainski et al., 2021, Sec 2.6. See instructions downloading installing R-INLA. R-INLA package includes user friendly shiny app aid spatial mesh setting choices: example, spatial mesh meuse data built using R-INLA functions, inla.convex.hull() set boundary inla.mesh.2d() generate spatial mesh: inlabru R package can used visualize mesh:","code":"# install R-INLA install.packages(\"INLA\", repos = c(getOption(\"repos\"), INLA = \"https://inla.r-inla-download.org/R/stable\"), dep = TRUE) library(INLA) meshbuilder() # launches INLA mesh shiny app library(INLA) Loc <- meuse[, 1:2] Bnd <- inla.nonconvex.hull(as.matrix(Loc), convex = 200) meuse.mesh <- inla.mesh.2d(as.matrix(Loc),   max.edge = c(300, 1000),   boundary = Bnd ) ggplot() +   inlabru::gg(meuse.mesh) +   geom_point(mapping = aes(x = Loc[, 1], y = Loc[, 2], size = 0.5), size = 0.5) +   theme_classic()"},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"fitting-a-spatial-model-with-clusttmb","dir":"Articles","previous_headings":"Fitting clustTMB models > Spatial FMM","what":"Fitting a spatial model with clustTMB","title":"Meuse Data Example","text":"Coordinates converted spatial point data frame read clustTMB model, along mesh, using spatial.list argument. Spatial projections can generated defining spatial data frame prediction coordinates. can passed model via projection.dat argument clustTMB. gating formula specified using gmrf() command: Results can viewed via model output:","code":"# convert coordinates to a spatial point data frame sp::coordinates(Loc) <- ~ x * y  # define spatial prediction coordinates data(\"meuse.grid\") sp::coordinates(meuse.grid) <- ~ x * y mod.ln.sp <- clustTMB(   response = meuse[, 3:6],   family = lognormal(link = \"identity\"),   gatingformula = ~ gmrf(0 + 1 | loc),   G = 4, covariance.structure = \"VVV\",   spatial.list = list(loc = Loc, mesh = meuse.mesh),   projection.dat = meuse.grid ) # Estimated fixed parameters summary(mod.ln.sp$sdr, \"fixed\") ##             Estimate Std. Error ## betag      0.1652490 0.51143265 ## betag      0.5708926 0.50455215 ## betag      0.1645111 0.50111965 ## betad      2.0157759 0.09100853 ## betad      4.3160885 0.03898693 ## betad      5.4259832 0.08790513 ## betad      6.7095830 0.08920047 ## betad      1.0064951 0.03967217 ## betad      3.6030503 0.03008715 ## betad      5.2113154 0.04647306 ## betad      6.2155371 0.04387995 ## betad      0.1259813 0.06250006 ## betad      3.1475092 0.02038049 ## betad      4.2016941 0.04031245 ## betad      5.2523440 0.03330888 ## betad     -1.4361504 0.05510449 ## betad      3.1132975 0.03560891 ## betad      4.2118625 0.04706048 ## betad      5.1996599 0.04976675 ## theta     -1.2100852 0.16013142 ## theta     -2.9055389 0.19071087 ## theta     -1.2794753 0.15756886 ## theta     -1.2502189 0.13950089 ## theta     -2.5623904 0.17078742 ## theta     -3.1154940 0.13779685 ## theta     -2.2459449 0.13350833 ## theta     -2.3607751 0.13177503 ## theta     -1.8075059 0.17469438 ## theta     -4.0486843 0.19343376 ## theta     -2.6845204 0.14489411 ## theta     -3.0661928 0.15618014 ## theta     -2.4648438 0.25661362 ## theta     -3.3381145 0.23942154 ## theta     -2.7804389 0.20016937 ## theta     -2.6686118 0.19753635 ## ln_kappag -5.9089373 0.27892377 # Minimum negative log likelihood mod.ln.sp$opt$objective ## [1] 2318.798"},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"comparison-case-study","dir":"Articles","previous_headings":"","what":"Comparison Case Study","title":"Meuse Data Example","text":"cluster analysis run meuse dataset using Gaussian lognormal family without spatial random effects gating network clusters ranging 2 10. BIC scores favored lognormal spatial model 4 clusters (Table @ref(tab:BIC)). model resulted fewer clusters compared spatial Gaussian model. Optimum cluster size BIC scores lognormal Gaussian models (1) without (0) spatial random effects gating network. Results optimal model suggested spatial pattern highest ppm observations four metals clustered together (Cluster 0) narrow strip along bank Meuse River within northwest corner floodplain (Fig. @ref(fig:pairs), Fig. @ref(fig:pred)). separate cluster (Cluster 3) characterized low ppm values metals spatially distributed central region floodplain. two clusters characterized moderately low (Cluster 2) moderately high (Cluster 1) ppm values metals. Spatial predictions clustered heavy metals Meuse River floodplain (Fig. @ref(fig:pred)) can aid risk assessment environmental mitigation measures flood events. Pairs plots concentration levels (ppm) four heavy metals measured topsoil Meuse river floodplain, Netherlands. Colors represent four clusters estimated spatial lognormal FMM. Predicted cluster distribution heavy metal concentration levels (ppm) four metals topsoil Meuse river floodplain, Netherlands. Colors represent four clusters estimated spatial lognormal FMM.","code":""},{"path":[]},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"spatial-gmrf","dir":"Articles","previous_headings":"clustTMB Formulations","what":"Spatial GMRF","title":"Meuse Data Example","text":"clustTMB fits spatial random effects using Gaussian Markov Random Field (GMRF). precision matrix, \\(Q\\), GMRF inverse Matern covariance function takes two parameters: 1) \\(\\kappa\\), spatial decay parameter scaled function spatial range, \\(\\phi = \\sqrt{8}/\\kappa\\), distance two locations considered independent; 2) \\(\\tau\\), function \\(\\kappa\\) marginal spatial variance \\(\\sigma^{2}\\): \\[\\tau = \\frac{1}{2\\sqrt{\\pi}\\kappa\\sigma}.\\] precision matrix approximated following SPDE-FEM approach, constrained Delaunay triangulation network used discretize spatial extent order determine GMRF set irregularly spaced locations, \\(\\). details SPDE-FEM approach, see Krainski et al., 2021, Sec. 2.2 \\[\\omega_{} \\sim GMRF(Q[\\kappa, \\tau])\\]","code":""},{"path":"https://andrea-havron.github.io/clustTMB/articles/SpatialExMeuseData.html","id":"gating-network","dir":"Articles","previous_headings":"clustTMB Formulations","what":"Gating Network","title":"Meuse Data Example","text":"random effects, \\(\\mathbb{u}\\), specified gating network, probability cluster membership \\(\\pi_{,g}\\) observation \\(\\) fit using multinomial regression: \\[ \\begin{align} \\mathbb{\\eta}_{,g} &= X\\mathbb{\\beta}_{,g} + \\mathbb{u}_{,g} \\\\ \\mathbb{\\pi}_{,g} &= \\frac{ exp(\\mathbb{\\eta}_{,g})}{\\sum^{G}_{g=1}exp(\\mathbb{\\eta}_{,g})} \\end{align} \\]","code":""},{"path":"https://andrea-havron.github.io/clustTMB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrea M. Havron. Author, maintainer.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Havron, Andrea. 2022. clustTMB: spatial finite mixture model. R package version 0.0.1.0. https://github.com/Andrea-Havron/clustTMB","code":"@Manual{,   title = {clustTMB: spatial finite mixture model},   author = {Andrea Havron},   year = {2022},   url = {https://github.com/Andrea-Havron/clustTMB}, }"},{"path":"https://andrea-havron.github.io/clustTMB/index.html","id":"clusttmb","dir":"","previous_headings":"","what":"Spatio-Temporal Finite Mixture Model using TMB","title":"Spatio-Temporal Finite Mixture Model using TMB","text":"clustTMB fits finite mixture models incorporate covariate random effect structure within either gating, expert, components model. clustTMB model built Template Model Builder (TMB) implemented R using formula syntax similar finite mixture modeling packages mclust. TMB structure finite mixture model allows fast computations random effects using Laplace Approximation calculate marginal likelihood fixed effects integrating random components. Spatial random effects estimated approximations Gaussian Markov Random Fields via FEM-SPDE method introduced INLA.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatio-Temporal Finite Mixture Model using TMB","text":"can install development version GitHub : clustTMB package relies functions R-INLA, available CRAN. Details installing R-INLA available website. install stable version, use:","code":"remotes::install_github(\"Andrea-Havron/clustTMB\", build_vignettes = TRUE) install.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/stable\"), dep=TRUE)"},{"path":"https://andrea-havron.github.io/clustTMB/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Spatio-Temporal Finite Mixture Model using TMB","text":"basic example illustrated faithful dataset:  detailed examples, see vignettes:","code":"library(clustTMB) #> Warning in checkDepPackageVersion(dep_pkg = \"TMB\"): Package version inconsistency detected. #> glmmTMB was built with TMB version 1.9.1 #> Current TMB version is 1.9.0 #> Please re-install glmmTMB from source or restore original 'TMB' package (see '?reinstalling' for more information) data(\"faithful\") m1 <- clustTMB(response = faithful, covariance.structure = \"VVV\") ## Not Run   # install.packages(\"utils\") utils::browseVignettes(\"clustTMB\")  ## End Not Run"},{"path":"https://andrea-havron.github.io/clustTMB/reference/clustTMB.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a finite mixture model using TMB ‚Äî clustTMB","title":"Fit a finite mixture model using TMB ‚Äî clustTMB","text":"Fit finite mixture model using TMB","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/clustTMB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a finite mixture model using TMB ‚Äî clustTMB","text":"","code":"clustTMB(   response = NULL,   expertformula = ~1,   gatingformula = ~1,   expertdata = NULL,   gatingdata = NULL,   family = gaussian(link = \"identity\"),   Offset = NULL,   G = 2,   rr = list(spatial = NULL, temporal = NULL, random = NULL),   covariance.structure = NULL,   Start = list(),   Map = list(),   initialization.args = list(control = init.options()),   spatial.list = list(loc = NULL, mesh = NULL, init.range = list(gating.range = NULL,     expert.range = NULL)),   projection.dat = NULL,   control = run.options() )"},{"path":"https://andrea-havron.github.io/clustTMB/reference/clustTMB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a finite mixture model using TMB ‚Äî clustTMB","text":"response numeric vector, matrix, data frame observations. data multivariate, rows correspond observations columns correspond multivariate response. expertformula Formula defining expert model. formula corresponds covariates included response densities. Defaults intercept (~1) covariates used. gatingformula Formula defining gating model.  formula corresponds covariates included mixing proportions (logistic regression). Defaults intercept (~1) covariates used. random effects term included gating network, formula updated intercept term removed. expertdata Data frame containing expert model covariates. gatingdata Data frame containing gating model covariates. family Statistical distribution link function observations. Offset Constant expertformula used offset density expectation. G Integer specifying number clusters. rr List specifying dimension rank reduction spatial, temporal, /random effects. Dimension must smaller total dimension reponse. Rank reduction applied expertformula random effects. rank reduction reduces dimensionality correlated multivariate ressponse smaller dimension independent reponse. used, covariance structure response swicthed 'Diagonal.' Defaults NULL, rank reduction. rank reduction used conjunction random effect, random effect must also specified expert formula. Currently, rank reduction temporal random effects disabled. covariance.structure character string specifying covariance structure response using mclust naming scheme. See description modelNames ?Mclust details. Start Set initial values random effects parameters (fixed random terms) Map Vector indicating parameter maps, see ?TMB::MakeADFun details. Defaults clustTMB control map argument user input limited initialization.args list consisting initalization settings used generate initial values. control Calls init.options() generate settings initial values. Arguments init.options() can specified user. init.method - Single character string indicating intial clustering method. Mehtods include: hc, quantile, random, mclust, kmeans, mixed, user. Defaults 'hc'. case data univariate covariates gating/expert formula, defaults 'quantile' hc.options - Named list two character strings specifying hc modelName hcUse init.method = 'hc'. default modelName 'VVV' default use 'SVD' unless gating/expert covariates specified, case default VARS. See ?mclust::mclust.options complete list options. mix.method - String stating initialization method mixed-type data (init.method = 'mixed'). Current default Tweedie family specified. Options include: Gower kmeans (default), Gower hclust, kproto. user - Numeric character vector defining user specified intial classification. init.method must set 'user' using option. spatial.list List data objects needed fitting spatial GMRF model projection.dat Spatial Points class projection coordinates Spatial Points Dataframe containing projection coordinates projection covariates control List controlling whether models run whether standard errors calculated.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/clustTMB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a finite mixture model using TMB ‚Äî clustTMB","text":"list objects fitted model","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/clustTMB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a finite mixture model using TMB ‚Äî clustTMB","text":"","code":"data(\"faithful\") m1 <- clustTMB(response = faithful, covariance.structure = \"VVV\") #> 'as(<matrix>, \"dgTMatrix\")' is deprecated. #> Use 'as(as(as(., \"dMatrix\"), \"generalMatrix\"), \"TsparseMatrix\")' instead. #> See help(\"Deprecated\") and help(\"Matrix-deprecated\"). plot(faithful$eruptions, faithful$waiting, pch = 16, col = m1$report$classification + 1)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/findbars_x.html","id":null,"dir":"Reference","previous_headings":"","what":"find and process random effects terms ‚Äî findbars_x","title":"find and process random effects terms ‚Äî findbars_x","text":"find process random effects terms","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/findbars_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find and process random effects terms ‚Äî findbars_x","text":"","code":"findbars_x(   term,   debug = FALSE,   specials = character(0),   default.special = \"norm\" )"},{"path":"https://andrea-havron.github.io/clustTMB/reference/findbars_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find and process random effects terms ‚Äî findbars_x","text":"term formula piece formula debug (logical) debug? specials list special terms default.special character: special use parenthesized terms - .e. random effects terms unspecified structure atom (call expression): NULL special, .e. foo(...) \"foo\" specials: return term parenthesized term: head head | (.e. form (xx|gg), convert default special type; allow pathological cases like ((xx|gg))","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/findbars_x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"find and process random effects terms ‚Äî findbars_x","text":"","code":"splitForm(quote(us(x,n=2))) #> $fixedFormula #> ~1 #> <environment: 0x55bc8c033698> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  findbars_x(~ 1 + (1 | f) + (1 | g)) #> NULL findbars_x(~ 1 + (1 | f) + (1 | g)) #> NULL findbars_x(~ 1 + (1|Subject)) #> NULL findbars_x(~ (1||Subject)) #> NULL findbars_x(~ (1|Subject)) #> NULL findbars_x(~ 1 + x) #> NULL"},{"path":"https://andrea-havron.github.io/clustTMB/reference/fixStruct.names.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed Covariance Structure names ‚Äî fixStruct.names","title":"Fixed Covariance Structure names ‚Äî fixStruct.names","text":"Fixed Covariance Structure names","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/fixStruct.names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed Covariance Structure names ‚Äî fixStruct.names","text":"","code":"fixStruct.names()"},{"path":"https://andrea-havron.github.io/clustTMB/reference/fixStruct.names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed Covariance Structure names ‚Äî fixStruct.names","text":"","code":"fixStruct.names() #> [1] \"E\"   \"V\"   \"EII\" \"VII\" \"EEI\" \"VVI\" \"VVV\" \"EEE\""},{"path":"https://andrea-havron.github.io/clustTMB/reference/init.options.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization options with S3 classes ‚Äî init.options","title":"Initialization options with S3 classes ‚Äî init.options","text":"Initialization options S3 classes","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/init.options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization options with S3 classes ‚Äî init.options","text":"","code":"init.options(   init.method = \"hc\",   hc.options = list(modelName = \"VVV\", use = \"SVD\"),   exp.init = list(mahala = TRUE),   mix.method = \"Gower kmeans\",   user.class = integer() )"},{"path":"https://andrea-havron.github.io/clustTMB/reference/init.options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization options with S3 classes ‚Äî init.options","text":"init.method Name method used set initial values. init.method = 'user', must define 'user.class' classification vector. hc.options Model names use init.method 'hc' following conventions mclust::mclust.options() exp.init Turn mahala initialization expert network mix.method Initialization methods data mixed. Default method data Tweedie distributed. user.class Vector classification vector set user required init.method = 'user'","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/init.options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization options with S3 classes ‚Äî init.options","text":"list initialization specifications","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/init.options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialization options with S3 classes ‚Äî init.options","text":"","code":"init.options() #> $init.method #> [1] \"hc\" #>  #> $hc.options #> $hc.options$modelName #> [1] \"VVV\" #>  #> $hc.options$use #> [1] \"SVD\" #>  #>  #> $exp.init #> $exp.init$mahala #> [1] TRUE #>  #>  #> $mix.method #> [1] \"Gower kmeans\" #>  #> $user.class #> integer(0) #>  #> $defaults #> [1] \"init.method\" \"hcName\"      \"hcUse\"       \"mix.method\"  #>  #> attr(,\"class\") #> [1] \"InitOptions\" init.options(init.method = \"hc\") #> $init.method #> [1] \"hc\" #>  #> $hc.options #> $hc.options$modelName #> [1] \"VVV\" #>  #> $hc.options$use #> [1] \"SVD\" #>  #>  #> $exp.init #> $exp.init$mahala #> [1] TRUE #>  #>  #> $mix.method #> [1] \"Gower kmeans\" #>  #> $user.class #> integer(0) #>  #> $defaults #> [1] \"hcName\"     \"hcUse\"      \"mix.method\" #>  #> attr(,\"class\") #> [1] \"InitOptions\" init.options(init.method = \"mixed\") #> $init.method #> [1] \"mixed\" #>  #> $hc.options #> $hc.options$modelName #> [1] \"VVV\" #>  #> $hc.options$use #> [1] \"SVD\" #>  #>  #> $exp.init #> $exp.init$mahala #> [1] TRUE #>  #>  #> $mix.method #> [1] \"Gower kmeans\" #>  #> $user.class #> integer(0) #>  #> $defaults #> [1] \"hcName\"     \"hcUse\"      \"mix.method\" #>  #> attr(,\"class\") #> [1] \"InitOptions\" init.options(init.method = \"user\", user.class = c(1, 1, 2, 1, 3, 3, 1, 2)) #> $init.method #> [1] \"user\" #>  #> $hc.options #> $hc.options$modelName #> [1] \"VVV\" #>  #> $hc.options$use #> [1] \"SVD\" #>  #>  #> $exp.init #> $exp.init$mahala #> [1] TRUE #>  #>  #> $mix.method #> [1] \"Gower kmeans\" #>  #> $user.class #> [1] 1 1 2 1 3 3 1 2 #>  #> $defaults #> [1] \"hcName\"     \"hcUse\"      \"mix.method\" #>  #> attr(,\"class\") #> [1] \"InitOptions\""},{"path":"https://andrea-havron.github.io/clustTMB/reference/inla_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if INLA installed (i.e., not on CRAN) ‚Äî inla_installed","title":"Check if INLA installed (i.e., not on CRAN) ‚Äî inla_installed","text":"Check INLA installed (.e., CRAN)","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/inla_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if INLA installed (i.e., not on CRAN) ‚Äî inla_installed","text":"","code":"inla_installed()"},{"path":"https://andrea-havron.github.io/clustTMB/reference/inla_installed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if INLA installed (i.e., not on CRAN) ‚Äî inla_installed","text":"","code":"inla_installed() #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, were retired in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:."},{"path":"https://andrea-havron.github.io/clustTMB/reference/lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Lognormal family and link specification ‚Äî lognormal","title":"Lognormal family and link specification ‚Äî lognormal","text":"Lognormal family link specification","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lognormal family and link specification ‚Äî lognormal","text":"","code":"lognormal(link = \"identity\")"},{"path":"https://andrea-havron.github.io/clustTMB/reference/lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lognormal family and link specification ‚Äî lognormal","text":"link link function association family","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/lognormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lognormal family and link specification ‚Äî lognormal","text":"","code":"fam <- lognormal() fam$family #> [1] \"lognormal\" fam$link #> [1] \"identity\""},{"path":"https://andrea-havron.github.io/clustTMB/reference/parm.lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Information ‚Äî parm.lookup","title":"Parameter Information ‚Äî parm.lookup","text":"Parameter Information","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/parm.lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Information ‚Äî parm.lookup","text":"","code":"parm.lookup()"},{"path":"https://andrea-havron.github.io/clustTMB/reference/parm.lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Information ‚Äî parm.lookup","text":"Description parameters, including dimension structure","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/parm.lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Information ‚Äî parm.lookup","text":"","code":"parm.lookup() #> $parm #>              parm   type    str       dim #> 1           betag  Fixed Matrix    Kg,G-1 #> 2           betad  Fixed  Array    Kd,J,G #> 3          betapz  Fixed  Array     M,J,G #> 4           theta  Fixed Matrix       J,G #> 5          thetaf  Fixed Matrix       J,G #> 6  logit_corr_fix  Fixed Matrix (J^2-J)/2 #> 7         ld_rand  Fixed Matrix      Fr,G #> 8           ld_sp  Fixed Matrix      Fs,G #> 9        Hg_input  Fixed Matrix     2,G-1 #> 10       Hd_input  Fixed  Array     2,J,G #> 11     ln_kappa_g  Fixed Vector       G-1 #> 12     ln_kappa_d  Fixed Matrix       J,G #> 13       ln_tau_d  Fixed Matrix       J,G #> 14     logit_rhog  Fixed Vector       G-1 #> 15     logit_rhod  Fixed Matrix       J,G #> 16     ln_sigmaup  Fixed Vector       G-1 #> 17     ln_sigmaep  Fixed Matrix       J,G #> 18      ln_sigmav  Fixed Matrix      Fr,G #> 19     upsilon_tg Random  Array     T,G-1 #> 20    epsilon_tjg Random  Array     T,J,G #> 21          v_ifg Random  Array  N,J/Fr,G #> 22       Gamma_vg Random  Array     N,G-1 #> 23      Omega_vfg Random  Array  V,J/Fs,G #>                                                     descr #> 1                           Gating covariate coefficients #> 2                           Expert covariate coefficients #> 3                   Zero-inflation covariate coefficients #> 4                Observation variance terms (natural log) #> 5                Tweedie power parameter (adjusted logit) #> 6            Observation multivariate correlation (logit) #> 7                  Overdispersion rank reduction loadings #> 8                         Spatial rank reduction loadings #> 9                      Anisotropy terms in spatial gating #> 10                     Anisotropy terms in spatial expert #> 11                     Spatial gating decay (natural log) #> 12                     Spatial expert decay (natural log) #> 13                 Spatial expert precision (natural log) #> 14                    Temporal gating correlation (logit) #> 15                    Temporal expert correlation (logit) #> 16                 Temporal gating variance (natural log) #> 17                 Temporal expert variance (natural log) #> 18 Overdispersion expert standard deviation (natural log) #> 19                          Temporal gating random effect #> 20                          Temporal expert random effect #> 21                    Overdispersion expert random effect #> 22                           Spatial gating random effect #> 23                           Spatial expert random effect #>  #> $key #>    dim                                  descr #> 1   Fr         Rank reduction on random error #> 2   Fs      Rank reduction on spatial effects #> 3    G                     Number of clusters #> 4    J      Number of columns in the response #> 5   Kd         Number of covariates in gating #> 6   Kg         Number of covariates in expert #> 7    M Number of covariates in zero inflation #> 8    N Number of observations in the response #> 9    T        Number of unique temporal units #> 10   V        Number of vertices in INLA mesh #>  #> $note #> $note[[1]] #> [1] \"ln_sigma_v not estimated - fixed to ln(1)\" #>  #>"},{"path":"https://andrea-havron.github.io/clustTMB/reference/run.options.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Options ‚Äî run.options","title":"Run Options ‚Äî run.options","text":"Run Options","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/run.options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Options ‚Äî run.options","text":"","code":"run.options(check.input = NULL, run.model = NULL, do.sdreport = NULL)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/run.options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Options ‚Äî run.options","text":"check.input TRUE: Return initial values running TMB run.model FALSE: Return TMB object optimizing model .sdreport TRUE: Run delta method obtain standard errors","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/run.options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Options ‚Äî run.options","text":"list","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/run.options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Options ‚Äî run.options","text":"","code":"run.options() #> $check.input #> [1] FALSE #>  #> $run.model #> [1] TRUE #>  #> $do.sdreport #> [1] TRUE #>"},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.projDat.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup projection data for mkDat ‚Äî setup.projDat","title":"Setup projection data for mkDat ‚Äî setup.projDat","text":"Setup projection data mkDat","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.projDat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup projection data for mkDat ‚Äî setup.projDat","text":"","code":"setup.projDat(mesh, projection.dat, expert.formula, gating.formula)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.projDat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup projection data for mkDat ‚Äî setup.projDat","text":"mesh spatial constrained Delaunay triangulation derived R-INLA projection.dat Spatial Points class projection coordinates Spatial Points Dataframe containing projection coordinates projection covariates expert.formula Formula defining expert model. formula corresponds covariates included response densities. Defaults intercept (~1) covariates used. gating.formula Formula defining gating model. formula corresponds covariates included mixing proportions (logistic regression). Defaults intercept (~1) covariates used. random effects term included gating network, formula updated intercept term removed.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.projDat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup projection data for mkDat ‚Äî setup.projDat","text":"list projection data","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.spatialDat.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup spatial data for mkDat ‚Äî setup.spatialDat","title":"Setup spatial data for mkDat ‚Äî setup.spatialDat","text":"Setup spatial data mkDat","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.spatialDat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup spatial data for mkDat ‚Äî setup.spatialDat","text":"","code":"setup.spatialDat(n.i, spatial.list, projection.dat)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.spatialDat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup spatial data for mkDat ‚Äî setup.spatialDat","text":"n.number observations spatial.list list spatial locations mesh projection.dat Points class projection coordinates Spatial Points Dataframe containing projection coordinates projection covariates","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/setup.spatialDat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup spatial data for mkDat ‚Äî setup.spatialDat","text":"list spatial mesh sparse matrix","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/skewness.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates skewness ‚Äî skewness","title":"Calculates skewness ‚Äî skewness","text":"Calculates skewness","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/skewness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates skewness ‚Äî skewness","text":"","code":"skewness(x)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/skewness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates skewness ‚Äî skewness","text":"x numeric vector values skewness calculated","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/skewness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates skewness ‚Äî skewness","text":"skewness value x","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/skewness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates skewness ‚Äî skewness","text":"","code":"skewness(rgamma(100, 1, 1)) #> [1] 1.877663"},{"path":"https://andrea-havron.github.io/clustTMB/reference/spdeStruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate SPDE list needed as imput to FEM-SPDE spatial TMB models ‚Äî spdeStruct","title":"Generate SPDE list needed as imput to FEM-SPDE spatial TMB models ‚Äî spdeStruct","text":"Generate SPDE list needed imput FEM-SPDE spatial TMB models","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/spdeStruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate SPDE list needed as imput to FEM-SPDE spatial TMB models ‚Äî spdeStruct","text":"","code":"spdeStruct(mesh)"},{"path":"https://andrea-havron.github.io/clustTMB/reference/spdeStruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate SPDE list needed as imput to FEM-SPDE spatial TMB models ‚Äî spdeStruct","text":"mesh INLA mesh object generated INLA::inla.mesh.create() INLA::inla.mesh.2d()","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/spdeStruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate SPDE list needed as imput to FEM-SPDE spatial TMB models ‚Äî spdeStruct","text":"spde List used input TMB anisotropic model","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":null,"dir":"Reference","previous_headings":"","what":"Split formula containing special random effect terms ‚Äî splitForm","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"Parse formula fixed formula random effect terms, treating 'special' terms appropriately","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"","code":"splitForm(   formula,   defaultTerm = \"norm\",   allowFixedOnly = TRUE,   allowNoSpecials = TRUE,   debug = FALSE )"},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"formula formula containing special random effect terms defaultTerm default type non-special RE terms allowFixedOnly (logical) formulas RE terms OK? allowNoSpecials (logical) formulas standard RE terms OK? debug (logical) debug?","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"list containing elements fixedFormula; reTrmFormulas list x | g formulas term; reTrmAddArgs list function+additional arguments, .e. list() (non-special), foo() (additional arguments), foo(addArgs) (additional arguments); reTrmClasses (vector special functions/classes, character)","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"Taken Steve Walker's lme4ord, ultimately flexLambda branch lme4 https://github.com/stevencarlislewalker/lme4ord/blob/master/R/formulaParsing.R.  Mostly internal use.","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"Steve Walker","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/splitForm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split formula containing special random effect terms ‚Äî splitForm","text":"","code":"splitForm(~x+y)                     ## no specials or RE #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(f|g))               ## no specials #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+diag(f|g))           ## one special #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(diag(f|g)))         ## 'hidden' special #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(f|g)+cs(1|g))       ## combination #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(1|f/g))             ## 'slash'; term #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(1|f/g/h))             ## 'slash'; term #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(1|(f/g)/h))             ## 'slash'; term #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~x+y+(f|g)+cs(1|g)+cs(a|b,stuff))  ## complex special #> $fixedFormula #> ~x + y #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~(((x+y))))               ## lots of parentheses #> $fixedFormula #> ~(((x + y))) #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>  splitForm(~1+rr(f|g,n=2)) #> $fixedFormula #> ~1 #> <environment: 0x55bc99ed4288> #>  #> $reTrmFormulas #> NULL #>  #> $reTrmAddArgs #> NULL #>  #> $reTrmClasses #> NULL #>"},{"path":"https://andrea-havron.github.io/clustTMB/reference/tweedie.html","id":null,"dir":"Reference","previous_headings":"","what":"Tweedie family and link specification ‚Äî tweedie","title":"Tweedie family and link specification ‚Äî tweedie","text":"Tweedie family link specification","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/tweedie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tweedie family and link specification ‚Äî tweedie","text":"","code":"tweedie(link = \"log\")"},{"path":"https://andrea-havron.github.io/clustTMB/reference/tweedie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tweedie family and link specification ‚Äî tweedie","text":"link link function association family","code":""},{"path":"https://andrea-havron.github.io/clustTMB/reference/tweedie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tweedie family and link specification ‚Äî tweedie","text":"","code":"fam <- tweedie() fam$family #> [1] \"tweedie\" fam$link #> [1] \"log\""}]
